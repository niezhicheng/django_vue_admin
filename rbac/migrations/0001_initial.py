# Generated by Django 4.2.25 on 2025-10-03 09:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='手机号')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='头像')),
                ('data_scope', models.IntegerField(choices=[(1, '全部数据'), (2, '本部门及以下数据'), (3, '本部门数据'), (4, '本人数据')], default=4, verbose_name='数据权限')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='最后登录IP')),
                ('last_login_time', models.DateTimeField(blank=True, null=True, verbose_name='最后登录时间')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户管理',
                'db_table': 'rbac_user',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Api',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='API名称')),
                ('path', models.CharField(max_length=200, verbose_name='API路径')),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE'), ('PATCH', 'PATCH'), ('HEAD', 'HEAD'), ('OPTIONS', 'OPTIONS')], max_length=10, verbose_name='请求方法')),
                ('description', models.TextField(blank=True, null=True, verbose_name='API描述')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'API',
                'verbose_name_plural': 'API管理',
                'db_table': 'rbac_api',
                'ordering': ['group', 'path'],
            },
        ),
        migrations.CreateModel(
            name='ApiGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='分组名称')),
                ('description', models.TextField(blank=True, null=True, verbose_name='分组描述')),
                ('sort_order', models.IntegerField(default=0, verbose_name='排序')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'API分组',
                'verbose_name_plural': 'API分组管理',
                'db_table': 'rbac_api_group',
                'ordering': ['sort_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='菜单名称')),
                ('title', models.CharField(max_length=50, verbose_name='菜单标题')),
                ('icon', models.CharField(blank=True, max_length=100, null=True, verbose_name='菜单图标')),
                ('path', models.CharField(blank=True, max_length=200, null=True, verbose_name='路由路径')),
                ('component', models.CharField(blank=True, max_length=200, null=True, verbose_name='组件路径')),
                ('redirect', models.CharField(blank=True, max_length=200, null=True, verbose_name='重定向路径')),
                ('menu_type', models.IntegerField(choices=[(1, '目录'), (2, '菜单'), (3, '按钮')], default=2, verbose_name='菜单类型')),
                ('permission_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='权限标识')),
                ('sort_order', models.IntegerField(default=0, verbose_name='排序')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='是否隐藏')),
                ('is_keep_alive', models.BooleanField(default=True, verbose_name='是否缓存')),
                ('is_affix', models.BooleanField(default=False, verbose_name='是否固定标签')),
                ('is_frame', models.BooleanField(default=False, verbose_name='是否外链')),
                ('frame_src', models.CharField(blank=True, max_length=500, null=True, verbose_name='外链地址')),
                ('visible', models.BooleanField(default=True, verbose_name='是否显示')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='rbac.menu', verbose_name='上级菜单')),
            ],
            options={
                'verbose_name': '菜单',
                'verbose_name_plural': '菜单管理',
                'db_table': 'rbac_menu',
                'ordering': ['sort_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_id', models.CharField(default='0', max_length=50, unique=True, verbose_name='角色ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='角色名称')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='角色编码')),
                ('description', models.TextField(blank=True, null=True, verbose_name='角色描述')),
                ('data_scope', models.IntegerField(choices=[(1, '全部数据'), (2, '本部门及以下数据'), (3, '本部门数据'), (4, '本人数据')], default=4, verbose_name='数据权限')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '角色',
                'verbose_name_plural': '角色管理',
                'db_table': 'rbac_role',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PolicyRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_id', models.CharField(max_length=50, verbose_name='角色ID')),
                ('path', models.CharField(default='', max_length=200, verbose_name='路径')),
                ('method', models.CharField(max_length=10, verbose_name='请求方法')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '权限策略规则',
                'verbose_name_plural': '权限策略规则管理',
                'db_table': 'rbac_policy_rule',
                'ordering': ['role_id', 'path'],
                'unique_together': {('role_id', 'path', 'method')},
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='部门名称')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='部门编码')),
                ('level', models.IntegerField(default=1, verbose_name='层级')),
                ('sort_order', models.IntegerField(default=0, verbose_name='排序')),
                ('leader', models.CharField(blank=True, max_length=50, null=True, verbose_name='部门负责人')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='联系电话')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='邮箱')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='rbac.department', verbose_name='上级部门')),
            ],
            options={
                'verbose_name': '部门',
                'verbose_name_plural': '部门管理',
                'db_table': 'rbac_department',
                'ordering': ['sort_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ApiLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=10, verbose_name='请求方法')),
                ('path', models.CharField(max_length=200, verbose_name='请求路径')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP地址')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='用户代理')),
                ('request_data', models.TextField(blank=True, null=True, verbose_name='请求数据')),
                ('response_data', models.TextField(blank=True, null=True, verbose_name='响应数据')),
                ('status_code', models.IntegerField(verbose_name='状态码')),
                ('response_time', models.FloatField(verbose_name='响应时间(秒)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbac.api', verbose_name='API')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'API日志',
                'verbose_name_plural': 'API日志管理',
                'db_table': 'rbac_api_log',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='api',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apis', to='rbac.apigroup', verbose_name='所属分组'),
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='rbac.department', verbose_name='所属部门'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='分配时间')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbac.role', verbose_name='角色')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户角色',
                'verbose_name_plural': '用户角色管理',
                'db_table': 'rbac_user_role',
                'unique_together': {('user', 'role')},
            },
        ),
        migrations.CreateModel(
            name='RoleMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='分配时间')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbac.menu', verbose_name='菜单')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbac.role', verbose_name='角色')),
            ],
            options={
                'verbose_name': '角色菜单',
                'verbose_name_plural': '角色菜单管理',
                'db_table': 'rbac_role_menu',
                'unique_together': {('role', 'menu')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='api',
            unique_together={('path', 'method')},
        ),
    ]
